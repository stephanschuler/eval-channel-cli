#!/bin/zsh

function _callWithBackChannel() {

  local dataStreamProvider="$1"
  local backChannelMessage

  local processId=$(echo $$ | md5)

  # Eval return channel
  mkfifo $processId
  exec 3<>$processId
  rm $processId

  # Substitute for stdout
  mkfifo $processId
  exec 4<>$processId
  rm $processId

  # Substitute for stderr
  mkfifo $processId
  exec 5<>$processId
  rm $processId

  # List of sub process ids
  mkfifo $processId
  exec 6<>$processId
  rm $processId

  # Pass stdout/stderr to output
  (
    (
      local stdout
      while IFS= read -r -u4 stdout; do
        echo >&1 ">> $stdout"
      done
    ) &
    echo "$!" >&6
  )

  (
    (
      local stderr
      while IFS= read -r -u5 stderr; do
        echo >&2 ">> $stderr"
      done
    ) &
    echo "$!" >&6
  )

  # Kill stdout/stderr streams
  local trap="trap -"
  local processId
  while IFS= read -t -u6 processId; do
    trap="$trap ; kill $processId"
  done
  exec 6<&-
  trap "$trap" EXIT TERM INT

  # The actual script
  $dataStreamProvider 1>&4 2>&5 | while IFS= read -r -u3 backChannelMessage; do
    backChannelMessage=$(echo $backChannelMessage | base64 -D)
    eval "$backChannelMessage"
  done

  exec 3<&-
  exec 4<&-
  exec 5<&-

  return
}
